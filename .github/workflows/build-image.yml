name: Build

# Required GHA setup:
# GHA variables:
#  - REGISTRY_REDHAT_IO_USERNAME
#  - REGISTRY_QUAY_IO_USERNAME
# GHA secrets:
#  - REGISTRY_REDHAT_IO_PASSWORD
#  - REGISTRY_QUAY_IO_PASSWORD

on:
  push:

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Log in to Red Hat Registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: registry.redhat.io
          username: ${{ vars.REGISTRY_REDHAT_IO_USERNAME }}
          password: ${{ secrets.REGISTRY_REDHAT_IO_PASSWORD }}
      - run: podman info
      - name: Set build date
        run: echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV
      - name: Buildah Action
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: automation-reports
          tags: ${{ github.ref_name }}
          containerfiles: |
            ./docker/Dockerfile.backend
          labels: |
            org.opencontainers.image.created=${{ env.BUILD_DATE }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.version=${{ github.ref_name }}
      - run: podman image inspect automation-reports:${{ github.ref_name }}
      - run: podman image ls | grep automation-reports
      - name: Test built image
        run: podman run --rm automation-reports:${{ github.ref_name }} /venv/bin/python ./manage.py -h
      - name: Push To quay.io
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: quay.io/aap
          username: ${{ vars.REGISTRY_QUAY_IO_USERNAME }}
          password: ${{ secrets.REGISTRY_QUAY_IO_PASSWORD }}
        if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/gha-bundle'

  build-bundle:
    runs-on: ubuntu-latest
    needs: [build-image]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Log in to Red Hat Registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: registry.redhat.io
          username: ${{ vars.REGISTRY_REDHAT_IO_USERNAME }}
          password: ${{ secrets.REGISTRY_REDHAT_IO_PASSWORD }}
      - name: Log in to Quay.io Registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: quay.io
          username: ${{ vars.REGISTRY_QUAY_IO_USERNAME }}
          password: ${{ secrets.REGISTRY_QUAY_IO_PASSWORD }}
      - name: Prepare inventory
        run: |
          cat <<EOF >setup/inventory
          [automationreporter]
          aap24_reports.novalocal ansible_connection=local
          [automationreporter:vars]
          [all:vars]
          registry_username=${{ vars.REGISTRY_REDHAT_IO_USERNAME }}
          registry_password=${{ secrets.REGISTRY_REDHAT_IO_PASSWORD }}
          bundle_install=true
          bundle_dir=$PWD/setup/bundle
          EOF
      - name: Build bundle
        run: USE_QUAY_IO_IMAGE=1 QUAY_IO_IMAGE_TAG=${{ github.ref_name }} setup/build_bundle.sh
      - name: Upload bundle artifact
        uses: actions/upload-artifact@v4
        with:
          name: ansible-automation-reports-containerized-setup-bundle.tar.gz
          path: setup/bundle/ansible-automation-reports-containerized-setup-bundle.tar.gz
          retention-days: 31
        if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/gha-bundle'
